import type { DocumentNode } from 'graphql';
import { AnyVariables, Client, OperationContext, TypedDocumentNode } from '@urql/core';
import { OperationResultStore, Pausable } from './common';
export type SubscriptionArgs<Data = any, Variables extends AnyVariables = AnyVariables> = {
    client: Client;
    query: string | DocumentNode | TypedDocumentNode<Data, Variables>;
    context?: Partial<OperationContext>;
    pause?: boolean;
} & (Variables extends void ? {
    variables?: Variables;
} : Variables extends {
    [P in keyof Variables]: Variables[P] | null;
} ? {
    variables?: Variables;
} : {
    variables: Variables;
});
export declare function subscriptionStore<Data, Variables extends AnyVariables = AnyVariables>(args: SubscriptionArgs<Data, Variables>): OperationResultStore<Data, Variables> & Pausable;
